/**
 * TypeScript interfaces for the Scribe Viewer application
 * Based on the manifest structure generated by build_manifest.py
 */

export interface InterviewMetadata {
  /** Name of the interviewee */
  interviewee: string;
  /** Interview date in YYYY-MM-DD format */
  date: string;
  /** Summary or description of the interview content */
  summary: string;
}

export interface InterviewAssets {
  /** Path to the video file */
  video: string;
  /** Subtitle files by language code */
  subtitles: Record<string, string>;
  /** Path to the thumbnail image (optional) */
  thumbnail?: string;
}

export interface TranscriptCue {
  /** Start time in seconds */
  start: number;
  /** End time in seconds */
  end: number;
  /** Transcript text for this time segment */
  text: string;
}

export interface InterviewTranscript {
  /** Language code (e.g., 'en', 'de', 'he') */
  language: string;
  /** Full transcript text */
  text: string;
  /** Time-synchronized cues for highlighting */
  cues: TranscriptCue[];
}

export interface Interview {
  /** Unique identifier for the interview */
  id: string;
  /** Interview metadata */
  metadata: InterviewMetadata;
  /** Media and subtitle assets */
  assets: InterviewAssets;
  /** Available transcripts in different languages */
  transcripts: InterviewTranscript[];
  /** Admin metadata for tracking changes */
  adminMetadata?: {
    lastModified: string;
    modifiedBy: string;
    version: number;
  };
}

// Search-related types

export interface SearchResult {
  /** The interview that matched the search */
  interview: Interview;
  /** Relevance score from Fuse.js (0-1, lower is better) */
  score: number;
  /** Highlighted text snippet showing the match */
  snippet: string;
  /** Timestamp in seconds if the match was in transcript */
  timestamp?: number;
  /** Context around the match for better understanding */
  context: string;
  /** Which field matched (interviewee, summary, transcript) */
  matchedField: string;
}

export interface SearchOptions {
  /** Search query string */
  query: string;
  /** Filter by specific languages */
  languages?: string[];
  /** Filter by date range */
  dateRange?: {
    start: string;
    end: string;
  };
  /** Filter by specific interviewees */
  interviewees?: string[];
  /** Maximum number of results to return */
  limit?: number;
  /** Include transcript content in search */
  includeTranscripts?: boolean;
}

// Admin-related types

export interface AdminUpdateRequest {
  /** Updated metadata fields */
  metadata?: Partial<InterviewMetadata>;
  /** Reason for the update (for audit trail) */
  reason?: string;
}

export interface AuditLogEntry {
  /** Unique identifier for the audit entry */
  id: string;
  /** Interview ID that was modified */
  interviewId: string;
  /** Type of operation (create, update, delete) */
  operation: 'create' | 'update' | 'delete';
  /** Fields that were changed */
  changes: Record<string, { old: any; new: any }>;
  /** Reason provided for the change */
  reason?: string;
  /** Timestamp of the change */
  timestamp: string;
  /** User who made the change (when auth is implemented) */
  userId?: string;
}

// UI Component types

export interface SearchFilters {
  /** Selected languages */
  languages: string[];
  /** Date range filter */
  dateRange?: {
    start: string;
    end: string;
  };
  /** Selected interviewees */
  interviewees: string[];
  /** Sort order */
  sortBy: 'relevance' | 'date' | 'interviewee';
  /** Sort direction */
  sortDirection: 'asc' | 'desc';
}

export interface PaginationInfo {
  /** Current page number (1-based) */
  currentPage: number;
  /** Total number of pages */
  totalPages: number;
  /** Total number of results */
  totalResults: number;
  /** Number of results per page */
  resultsPerPage: number;
}
